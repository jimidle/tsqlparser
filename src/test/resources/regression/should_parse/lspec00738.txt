(aaa_translation_unit (batch_statements (statements (sql_statements (miscellaneous_statements (set_statement SET (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id (keywords IDENTITY_INSERT))))) (expression (keyw_id_part (func_keyw_id tablename))) ON))))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @minidentval))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id column_type))))))))))))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @maxidentval))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id column_type))))))))))))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @nextidentval))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id column_type))))))))))))) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (func_keyw_id @minidentval) = (expression (functions_and_vars (aggregate_windowed_functions MIN ( (expression (keyw_id_part (func_keyw_id @@IDENTITY))) ))))) , (select_element (func_keyw_id @maxidentval) = (expression (functions_and_vars (aggregate_windowed_functions MAX ( (expression (keyw_id_part (func_keyw_id @@IDENTITY))) )))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id tablename)))))))))))))) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id @minidentval))) = (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id IDENT_SEED))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms 'tablename'))))) )))))))) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (func_keyw_id @nextidentval) = (expression (expression (functions_and_vars (aggregate_windowed_functions MIN ( (expression (keyw_id_part (func_keyw_id @@IDENTITY))) )))) + (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id IDENT_INCR))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms 'tablename'))))) )))))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id tablename))) (as_clause (func_keyw_id t1)))))))) (where_clause WHERE (search_condition (predicate (expression (keyw_id_part (func_keyw_id @@IDENTITY))) BETWEEN (expression (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id IDENT_SEED))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms 'tablename'))))) ))))) AND (expression (keyw_id_part (func_keyw_id @maxidentval)))) AND (expression NOT EXISTS))))))))))))) (statements (sql_statements (select_statement (query_expression (query_specification (paren_sub_query ( (sub_query (select_statement (query_expression (query_specification SELECT (select_list (select_element *)) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id tablename))) (as_clause (func_keyw_id t2)))))))) (where_clause WHERE (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id t2))) . (expression (expression (keyw_id_part (func_keyw_id @@IDENTITY))) = (expression (expression (keyw_id_part (func_keyw_id t1))) . (expression (expression (keyw_id_part (func_keyw_id @@IDENTITY))) + (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id IDENT_INCR))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms 'tablename'))))) )))))))))))))))) )))))))) ELSE SELECT @nextidentval = IDENT_SEED ( 'tablename' ) SET IDENTITY_INSERT tablename OFF IF OBJECT_ID ( 'dbo.img' , 'U' ) IS NOT NULL DROP TABLE img GO CREATE TABLE img ( id_num int IDENTITY ( 1 , 1 ) , company_name sysname ) INSERT img ( company_name ) VALUES ( 'New Moon Books' ) INSERT img ( company_name ) VALUES ( 'Lucerne Publishing' ) SET IDENTITY_INSERT img ON DECLARE @minidentval smallint DECLARE @nextidentval smallint SELECT @minidentval = MIN ( @@IDENTITY ) FROM img IF @minidentval = IDENT_SEED ( 'img' ) SELECT @nextidentval = MIN ( @@IDENTITY ) + IDENT_INCR ( 'img' ) FROM img t1 WHERE @@IDENTITY BETWEEN IDENT_SEED ( 'img' ) AND 32766 AND NOT EXISTS ( SELECT * FROM img t2 WHERE t2 . @@IDENTITY = t1 . @@IDENTITY + IDENT_INCR ( 'img' ) ) ELSE SELECT @nextidentval = IDENT_SEED ( 'img' ) SET IDENTITY_INSERT img OFF)