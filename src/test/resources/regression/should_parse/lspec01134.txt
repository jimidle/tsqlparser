(aaa_translation_unit (batch_statements (statements (sql_statements (use_statement USE (keyw_id (keyw_id_part (func_keyw_id AdventureWorks2008R2))) ;))) (statements GO) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id OBJECT_ID))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms N'Production.usp_UpdateInventory'))) , (param_list_el (expression (atoms N'P'))))) ))))) IS NOT NULL)) (statements (ddl_statements (drop_statement DROP (dropCommonList (dropListElements PROCEDURE) (keyw_id_list (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id usp_UpdateInventory)))) ;)))))))) (statements GO) (statements (ddl_statements (create_statement CREATE (create_procedure PROCEDURE (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id usp_UpdateInventory))) (procedure_param_list (procedure_param_list_body (procedure_param (keyw_id_part (func_keyw_id @OrderDate)) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id datetime)))))))) (cproc_as AS (unblocked_statements (statements (sql_statements (miscellaneous_statements (merge_statement MERGE (merge_into is_opt_into (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id ProductInventory))) (as_clause AS (func_keyw_id (keywords target)))) USING (table_source (tableSourceElement (table_source_primitive (primitive_table ( (derivable_table (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (keyw_id_part (func_keyw_id ProductID)))) , (select_element (expression (functions_and_vars (aggregate_windowed_functions SUM ( (expression (keyw_id_part (func_keyw_id OrderQty))) )))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderDetail))) (as_clause AS (func_keyw_id sod)))) join_type_prefix JOIN (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderHeader))) (as_clause AS (func_keyw_id soh))))) (on_join ON (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id sod))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) = (expression (expression (keyw_id_part (func_keyw_id soh))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) AND (expression (expression (keyw_id_part (func_keyw_id soh))) . (expression (expression (keyw_id_part (func_keyw_id OrderDate))) = (expression (keyw_id_part (func_keyw_id @OrderDate)))))))))))))))) (group_by_clause GROUP BY (expression_list (expression (keyw_id_part (func_keyw_id ProductID))))))))) ) (as_clause AS (func_keyw_id (keywords source))) (column_aliases ( (func_keyw_id ProductID) , (func_keyw_id OrderQty) )))))) (merge_on ON (search_condition (predicate (expression ( (expression (expression (keyw_id_part (func_keyw_id (keywords target)))) . (expression (expression (keyw_id_part (func_keyw_id ProductID))) = (expression (expression (keyw_id_part (func_keyw_id (keywords source)))) . (expression (keyw_id_part (func_keyw_id ProductID)))))) )))) (merge_matches (when_clauses WHEN MATCHED AND (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id (keywords target)))) . (expression (expression (keyw_id_part (func_keyw_id Quantity))) - (expression (expression (keyw_id_part (func_keyw_id (keywords source)))) . (expression (expression (keyw_id_part (func_keyw_id OrderQty))) <= (expression (atoms 0)))))))) THEN (merge_matched DELETE)) (when_clauses WHEN MATCHED THEN (merge_matched UPDATE (merge_set_clause SET (merge_set_list (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id (keywords target))) . (keyw_id_part (func_keyw_id Quantity)))) = (expression (expression (keyw_id_part (func_keyw_id (keywords target)))) . (expression (expression (keyw_id_part (func_keyw_id Quantity))) - (expression (expression (keyw_id_part (func_keyw_id (keywords source)))) . (expression (keyw_id_part (func_keyw_id OrderQty))))))) , (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id (keywords target))) . (keyw_id_part (func_keyw_id ModifiedDate)))) = (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id GETDATE))))) (function_args ( )))))))))))) (output_clause (output_dml OUTPUT (dml_select_list (dml_select (del_col_name $action)) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id ProductID)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id Quantity)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id ModifiedDate)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Deleted))) . (expression (keyw_id_part (func_keyw_id ProductID)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Deleted))) . (expression (keyw_id_part (func_keyw_id Quantity)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Deleted))) . (expression (keyw_id_part (func_keyw_id ModifiedDate))))))))) ;)))) (statements GO) (statements (execute_statement (exec_one EXECUTE (exec_body (exec_sp (exec_sp_func (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id usp_UpdateInventory))) (exec_sp_param_list (exec_sp_param (expression (atoms '20030501')))))))))) <EOF>))))))) <EOF>)