(aaa_translation_unit (batch_statements (statements (sql_statements (use_statement USE (keyw_id (keyw_id_part (func_keyw_id AdventureWorks))) ;))) (statements GO) (statements (sql_statements (miscellaneous_statements (set_statement SET (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id (keywords NUMERIC_ROUNDABORT))))) OFF) ;)))) (statements (sql_statements (miscellaneous_statements (set_statement SET (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id (keywords ANSI_PADDING)))) , (keyw_id (keyw_id_part (func_keyw_id (keywords ANSI_WARNINGS)))) , (keyw_id (keyw_id_part (func_keyw_id (keywords CONCAT_NULL_YIELDS_NULL)))) , (keyw_id (keyw_id_part (func_keyw_id (keywords ARITHABORT)))) , (keyw_id (keyw_id_part (func_keyw_id (keywords QUOTED_IDENTIFIER)))) , (keyw_id (keyw_id_part (func_keyw_id (keywords ANSI_NULLS))))) ON) ;)))) (statements GO) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id OBJECT_ID))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (atoms 'Sales.vOrders'))) , (param_list_el (expression (atoms 'view'))))) ))))) IS NOT NULL)) (statements (ddl_statements (drop_statement DROP (dropCommonList (dropListElements VIEW) (keyw_id_list (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id vOrders)))) ;)))))))) (statements GO) (statements (ddl_statements (create_statement CREATE (create_view VIEW (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id vOrders))) (view_with WITH (view_attribute_list (view_attribute SCHEMABINDING))) (view_as AS (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (functions_and_vars (aggregate_windowed_functions SUM ( (expression (expression (expression (keyw_id_part (func_keyw_id UnitPrice))) * (expression (keyw_id_part (func_keyw_id OrderQty)))) * (expression ( (expression (expression (atoms 1.00)) - (expression (keyw_id_part (func_keyw_id UnitPriceDiscount)))) ))) )))) (as_clause AS (func_keyw_id Revenue))) , (select_element (expression (keyw_id_part (func_keyw_id OrderDate)))) , (select_element (expression (keyw_id_part (func_keyw_id ProductID)))) , (select_element (expression (functions_and_vars (aggregate_windowed_functions COUNT_BIG ( * )))) (as_clause AS (func_keyw_id (keywords COUNT))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderDetail))) (as_clause AS (func_keyw_id od)))))) , (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderHeader))) (as_clause AS (func_keyw_id o)))))))) (where_clause WHERE (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id od))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) = (expression (expression (keyw_id_part (func_keyw_id o))) . (expression (keyw_id_part (func_keyw_id SalesOrderID))))))))) (group_by_clause GROUP BY (expression_list (expression (keyw_id_part (func_keyw_id OrderDate))) , (expression (keyw_id_part (func_keyw_id ProductID))))))) ;)))))) (statements GO) (statements (ddl_statements (create_statement CREATE (create_index UNIQUE CLUSTERED INDEX (keyw_id (keyw_id_part (func_keyw_id IDX_V1))) (ci_on ON (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id vOrders))) (col_list_paren ( (column_name (keyw_id (keyw_id_part (func_keyw_id OrderDate)))) , (column_name (keyw_id (keyw_id_part (func_keyw_id ProductID)))) ))) ;)))) (statements GO) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (functions_and_vars (aggregate_windowed_functions SUM ( (expression (expression (expression (keyw_id_part (func_keyw_id UnitPrice))) * (expression (keyw_id_part (func_keyw_id OrderQty)))) * (expression ( (expression (expression (atoms 1.00)) - (expression (keyw_id_part (func_keyw_id UnitPriceDiscount)))) ))) )))) (as_clause AS (func_keyw_id Rev))) , (select_element (expression (keyw_id_part (func_keyw_id OrderDate)))) , (select_element (expression (keyw_id_part (func_keyw_id ProductID))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderDetail))) (as_clause AS (func_keyw_id od)))) join_type_prefix JOIN (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderHeader))) (as_clause AS (func_keyw_id o))))) (on_join ON (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id od))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) = (expression (expression (keyw_id_part (func_keyw_id o))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) AND (expression (keyw_id_part (func_keyw_id ProductID))))))) BETWEEN (expression (expression (expression (atoms 700)) and (expression (atoms 800))) AND (expression (expression (keyw_id_part (func_keyw_id OrderDate))) >= (expression (functions_and_vars (function CONVERT ( (data_type (data_type_el (keyw_id (keyw_id_part (func_keyw_id datetime))))) , (expression (atoms '05/01/2002')) , (expression (atoms 101)) ))))))))))))) (group_by_clause GROUP BY (expression_list (expression (keyw_id_part (func_keyw_id OrderDate))) , (expression (keyw_id_part (func_keyw_id ProductID))))))) (order_by_clause ORDER BY (order_by_expression_list (order_by_expression (expression (keyw_id_part (func_keyw_id Rev))) DESC))) ;))) (statements GO) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (keyw_id_part (func_keyw_id OrderDate)))) , (select_element (expression (functions_and_vars (aggregate_windowed_functions SUM ( (expression (expression (expression (keyw_id_part (func_keyw_id UnitPrice))) * (expression (keyw_id_part (func_keyw_id OrderQty)))) * (expression ( (expression (expression (atoms 1.00)) - (expression (keyw_id_part (func_keyw_id UnitPriceDiscount)))) ))) )))) (as_clause AS (func_keyw_id Rev)))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderDetail))) (as_clause AS (func_keyw_id od)))) join_type_prefix JOIN (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderHeader))) (as_clause AS (func_keyw_id o))))) (on_join ON (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id od))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) = (expression (expression (keyw_id_part (func_keyw_id o))) . (expression (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) AND (expression (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id DATEPART))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (keyw_id_part (func_keyw_id mm)))) , (param_list_el (expression (keyw_id_part (func_keyw_id OrderDate)))))) ))))) = (expression (atoms 3)))) AND (expression (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id DATEPART))))) (function_args ( (param_list_or_all (param_list (param_list_el (expression (keyw_id_part (func_keyw_id yy)))) , (param_list_el (expression (keyw_id_part (func_keyw_id OrderDate)))))) ))))) = (expression (atoms 2002)))))))))))))) (group_by_clause GROUP BY (expression_list (expression (keyw_id_part (func_keyw_id OrderDate))))))) (order_by_clause ORDER BY (order_by_expression_list (order_by_expression (expression (keyw_id_part (func_keyw_id OrderDate))) ASC))) ;))) (statements GO)) <EOF>)