(aaa_translation_unit (batch_statements (statements (sql_statements (use_statement USE (keyw_id (keyw_id_part (func_keyw_id AdventureWorks))) ;))) (statements GO) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate EXISTS (paren_sub_query ( (sub_query (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (keyw_id_part (func_keyw_id (keywords name)))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id (keywords sys))) . (keyw_id_part (func_keyw_id objects))))))))) (where_clause WHERE (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id (keywords name)))) = (expression (atoms N'SaveTranExample')))))))))) )))) (statements (ddl_statements (drop_statement DROP (dropCommonList (dropListElements PROCEDURE) (keyw_id_list (keyw_id (keyw_id_part (func_keyw_id SaveTranExample)))) ;)))))))) (statements GO) (statements (ddl_statements (create_statement CREATE (create_procedure PROCEDURE (keyw_id (keyw_id_part (func_keyw_id SaveTranExample))) (procedure_param_list (procedure_param_list_body (procedure_param (keyw_id_part (func_keyw_id @InputCandidateID)) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id INT)))))))) (cproc_as AS (unblocked_statements (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @TranCounter))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id INT))))))))) ;)))) (statements (sql_statements (miscellaneous_statements (set_statement SET (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id @TranCounter)))) = (expression (keyw_id_part (func_keyw_id @@TRANCOUNT)))) ;)))) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id @TranCounter))) > (expression (atoms 0))))) (statements (sql_statements (miscellaneous_statements (rollbacksave_statement SAVE TRANSACTION (func_keyw_id ProcedureSave) ;)))) (if_else ELSE (statements (sql_statements (miscellaneous_statements (begin_statement BEGIN TRANSACTION ;))))))))) (statements (sql_statements (miscellaneous_statements (begin_statement BEGIN TRY (statement_block (statements (sql_statements (miscellaneous_statements (delete_statement DELETE (delete_from_clause opt_from (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id HumanResources)) . (keyw_id_part (func_keyw_id JobCandidate)))))) (delete_where_clause WHERE (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id JobCandidateID))) = (expression (keyw_id_part (func_keyw_id @InputCandidateID))))))) ;)))) (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id @TranCounter))) = (expression (atoms 0))))) (statements (sql_statements (miscellaneous_statements (commit_statement COMMIT TRANSACTION ;))))))))) END TRY)))) (statements (sql_statements (miscellaneous_statements (begin_statement BEGIN CATCH (statement_block (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id @TranCounter))) = (expression (atoms 0))))) (statements (sql_statements (miscellaneous_statements (rollbacksave_statement ROLLBACK TRANSACTION ;)))) (if_else ELSE (statements (sql_statements (miscellaneous_statements (if_statement IF (search_condition (predicate (expression (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id XACT_STATE))))) (function_args ( ))))) <> (expression - (expression (atoms 1)))))) (statements (sql_statements (miscellaneous_statements (rollbacksave_statement ROLLBACK TRANSACTION (func_keyw_id ProcedureSave) ;))))))))))))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @ErrorMessage))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id NVARCHAR))) ( 4000 ))))))) ;)))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @ErrorSeverity))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id INT))))))))) ;)))) (statements (sql_statements (miscellaneous_statements (declare_statement DECLARE (declare_list (declare_list_item (keyw_id (keyw_id_part (func_keyw_id @ErrorState))) (declare_as opt_as (declare_as_opts (cr_type_data_type (cr_type_data (keyw_id (keyw_id_part (func_keyw_id INT))))))))) ;)))) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (func_keyw_id @ErrorMessage) = (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id ERROR_MESSAGE))))) (function_args ( ))))))))) ;))) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (func_keyw_id @ErrorSeverity) = (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id ERROR_SEVERITY))))) (function_args ( ))))))))) ;))) (statements (sql_statements (select_statement (query_expression (query_specification SELECT (select_list (select_element (func_keyw_id @ErrorState) = (expression (functions_and_vars (function (func_name (keyw_id_for_func (keyw_id_orcc (keyw_id_part (func_keyw_id ERROR_STATE))))) (function_args ( ))))))))) ;))) (statements (sql_statements (miscellaneous_statements (raiserror_statement RAISERROR ( (expression_list (expression (keyw_id_part (func_keyw_id @ErrorMessage))) , (expression (keyw_id_part (func_keyw_id @ErrorSeverity))) , (expression (keyw_id_part (func_keyw_id @ErrorState)))) ) ;))))) END CATCH)))) (statements GO) <EOF>))))))) <EOF>)