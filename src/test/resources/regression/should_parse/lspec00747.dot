digraph ParseTree {
  n0 -> n1 [label="batch_statements"];
  n1 -> n2 [label="statements"];
  n2 -> n3 [label="sql_statements"];
  n3 -> n4 [label="use_statement"];
  n4 -> n5 [label="USE"];
  n4 -> n6 [label="keyw_id"];
  n6 -> n7 [label="keyw_id_part"];
  n7 -> n8 [label="func_keyw_id"];
  n8 -> n9 [label="AdventureWorks"];
  n4 -> n10 [label=";"];
  n1 -> n11 [label="statements"];
  n11 -> n12 [label="GO"];
  n1 -> n13 [label="statements"];
  n13 -> n14 [label="sql_statements"];
  n14 -> n15 [label="miscellaneous_statements"];
  n15 -> n16 [label="insert_statement"];
  n16 -> n17 [label="INSERT"];
  n16 -> n18 [label="insert_into"];
  n18 -> n19 [label="is_opt_into"];
  n19 -> n20 [label="INTO"];
  n18 -> n21 [label="keyw_id"];
  n21 -> n22 [label="keyw_id_part"];
  n22 -> n23 [label="func_keyw_id"];
  n23 -> n24 [label="Production"];
  n21 -> n25 [label="."];
  n21 -> n26 [label="keyw_id_part"];
  n26 -> n27 [label="func_keyw_id"];
  n27 -> n28 [label="UnitMeasure"];
  n16 -> n29 [label="insert_update_target"];
  n29 -> n30 [label="insert_update_target_tbl"];
  n30 -> n31 [label="insert_update_target_values"];
  n31 -> n32 [label="VALUES"];
  n31 -> n33 [label="values_list_list"];
  n33 -> n34 [label="("];
  n33 -> n35 [label="iut_values_list"];
  n35 -> n36 [label="iut_value"];
  n36 -> n37 [label="expression"];
  n37 -> n38 [label="atoms"];
  n38 -> n39 [label="N'F2'"];
  n35 -> n40 [label=","];
  n35 -> n41 [label="iut_value"];
  n41 -> n42 [label="expression"];
  n42 -> n43 [label="atoms"];
  n43 -> n44 [label="N'Square Feet'"];
  n35 -> n45 [label=","];
  n35 -> n46 [label="iut_value"];
  n46 -> n47 [label="expression"];
  n47 -> n48 [label="functions_and_vars"];
  n48 -> n49 [label="function"];
  n49 -> n50 [label="func_name"];
  n50 -> n51 [label="keyw_id_for_func"];
  n51 -> n52 [label="keyw_id_orcc"];
  n52 -> n53 [label="keyw_id_part"];
  n53 -> n54 [label="func_keyw_id"];
  n54 -> n55 [label="GETDATE"];
  n49 -> n56 [label="function_args"];
  n56 -> n57 [label="("];
  n56 -> n58 [label=")"];
  n33 -> n59 [label=")"];
  n16 -> n60 [label=";"];
  n1 -> n61 [label="statements"];
  n61 -> n62 [label="GO"];
  n0 -> n63 [label="<EOF>"];
}