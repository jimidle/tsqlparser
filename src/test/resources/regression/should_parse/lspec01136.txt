(aaa_translation_unit (batch_statements (statements (sql_statements (use_statement USE (keyw_id (keyw_id_part (func_keyw_id AdventureWorks2008R2))) ;))) (statements GO) (statements (ddl_statements (create_statement CREATE (create_table TABLE (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id UpdatedInventory))) ( (ct_col_def_list (ct_col_def_list_element (ct_column_def_plus (ct_column_definition (keyw_id (keyw_id_part (func_keyw_id ProductID))) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id INT))))))) (ct_constraint_list (ct_col_table_constraint NOT NULL))) , (ct_col_def_list_element (ct_column_def_plus (ct_column_definition (keyw_id (keyw_id_part (func_keyw_id LocationID))) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id int)))))))) , (ct_col_def_list_element (ct_column_def_plus (ct_column_definition (keyw_id (keyw_id_part (func_keyw_id NewQty))) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id int)))))))) , (ct_col_def_list_element (ct_column_def_plus (ct_column_definition (keyw_id (keyw_id_part (func_keyw_id PreviousQty))) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id int)))))))) , (ct_col_def_list_element (ct_column_def_plus (ct_column_definition (keyw_id (keyw_id_part (func_keyw_id (keywords CONSTRAINT)))) (ct_data_type (ct_data (keyw_id (keyw_id_part (func_keyw_id PK_Inventory))))))) (ct_constraint_list (ct_col_table_constraint PRIMARY KEY CLUSTERED (ct_table_con_cols ( (ct_table_con_col (column_name (keyw_id (keyw_id_part (func_keyw_id ProductID))))) , (ct_table_con_col (column_name (keyw_id (keyw_id_part (func_keyw_id LocationID))))) )))))) ) ;)))) (statements GO) (statements (sql_statements (miscellaneous_statements (insert_statement INSERT (insert_into (is_opt_into INTO) (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id UpdatedInventory)))) (insert_update_target (insert_update_target_tbl (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (keyw_id_part (func_keyw_id ProductID)))) , (select_element (expression (keyw_id_part (func_keyw_id LocationID)))) , (select_element (expression (keyw_id_part (func_keyw_id NewQty)))) , (select_element (expression (keyw_id_part (func_keyw_id PreviousQty))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table ( (derivable_table (merge_statement MERGE (merge_into is_opt_into (keyw_id (keyw_id_part (func_keyw_id Production)) . (keyw_id_part (func_keyw_id ProductInventory))) (as_clause AS (func_keyw_id pi))) USING (table_source (tableSourceElement (table_source_primitive (primitive_table ( (derivable_table (select_statement (query_expression (query_specification SELECT (select_list (select_element (expression (keyw_id_part (func_keyw_id ProductID)))) , (select_element (expression (functions_and_vars (aggregate_windowed_functions SUM ( (expression (keyw_id_part (func_keyw_id OrderQty))) )))))) (from_clause FROM (table_source_list (table_source (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderDetail))) (as_clause AS (func_keyw_id sod)))) join_type_prefix JOIN (tableSourceElement (table_source_primitive (primitive_table (keyw_id (keyw_id_part (func_keyw_id Sales)) . (keyw_id_part (func_keyw_id SalesOrderHeader))) (as_clause AS (func_keyw_id soh))))) (on_join ON (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id sod))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) = (expression (expression (keyw_id_part (func_keyw_id soh))) . (expression (expression (keyw_id_part (func_keyw_id SalesOrderID))) AND (expression (expression (keyw_id_part (func_keyw_id soh))) . (expression (keyw_id_part (func_keyw_id OrderDate)))))))) BETWEEN (expression (expression (atoms '20030701')) AND (expression (atoms '20030731')))))))))) (group_by_clause GROUP BY (expression_list (expression (keyw_id_part (func_keyw_id ProductID))))))))) ) (as_clause AS (func_keyw_id src)) (column_aliases ( (func_keyw_id ProductID) , (func_keyw_id OrderQty) )))))) (merge_on ON (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id pi))) . (expression (expression (keyw_id_part (func_keyw_id ProductID))) = (expression (expression (keyw_id_part (func_keyw_id src))) . (expression (keyw_id_part (func_keyw_id ProductID)))))))) (merge_matches (when_clauses WHEN MATCHED AND (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id pi))) . (expression (expression (keyw_id_part (func_keyw_id Quantity))) - (expression (expression (keyw_id_part (func_keyw_id src))) . (expression (expression (keyw_id_part (func_keyw_id OrderQty))) >= (expression (atoms 0)))))))) THEN (merge_matched UPDATE (merge_set_clause SET (merge_set_list (set_vars (set_var_list (keyw_id (keyw_id_part (func_keyw_id pi)) . (keyw_id_part (func_keyw_id Quantity)))) = (expression (expression (keyw_id_part (func_keyw_id pi))) . (expression (expression (keyw_id_part (func_keyw_id Quantity))) - (expression (expression (keyw_id_part (func_keyw_id src))) . (expression (keyw_id_part (func_keyw_id OrderQty))))))))))) (when_clauses WHEN MATCHED AND (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id pi))) . (expression (expression (keyw_id_part (func_keyw_id Quantity))) - (expression (expression (keyw_id_part (func_keyw_id src))) . (expression (expression (keyw_id_part (func_keyw_id OrderQty))) <= (expression (atoms 0)))))))) THEN (merge_matched DELETE)))) (output_clause (output_dml OUTPUT (dml_select_list (dml_select (del_col_name $action)) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id ProductID)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id LocationID)))))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Inserted))) . (expression (keyw_id_part (func_keyw_id Quantity))))) (opt_as AS) (keyw_id (keyw_id_part (func_keyw_id NewQty)))) , (dml_select (del_col_name (expression (expression (keyw_id_part (func_keyw_id Deleted))) . (expression (keyw_id_part (func_keyw_id Quantity))))) (opt_as AS) (keyw_id (keyw_id_part (func_keyw_id PreviousQty))))))))) ) (as_clause AS (func_keyw_id Changes)) (column_aliases ( (func_keyw_id Action) , (func_keyw_id ProductID) , (func_keyw_id LocationID) , (func_keyw_id NewQty) , (func_keyw_id PreviousQty) )))))))) (where_clause WHERE (search_condition (predicate (expression (expression (keyw_id_part (func_keyw_id Action))) = (expression (atoms 'UPDATE')))))))) ;))))))) (statements GO)) <EOF>)